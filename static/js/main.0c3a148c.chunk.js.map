{"version":3,"sources":["App/Footer/Footer.module.scss","App/App.module.scss","App/Header/Header.js","App/Footer/Footer.js","App/App.js","router.js","serviceWorker.js","index.js","App/Header/Header.module.scss","utils/constants.js"],"names":["module","exports","Header","className","styles","root","homeLink","to","h1","link","href","target","rel","Footer","LEO_EMAIL","LEO_PHONE","YEAR","App","children","content","Home","lazy","Weddings","Lifestyle","Portraits","About","Contact","Router","basename","BASE_URL","fallback","component","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","TODAY","Date","getFullYear"],"mappings":"4FACAA,EAAOC,QAAU,CAAC,KAAO,uB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,QAAU,uB,6KCGtC,SAASC,IACtB,OACE,yBAAKC,UAAWC,IAAOC,MACrB,kBAAC,IAAD,CAAMF,UAAWC,IAAOE,SAAUC,GAAG,KACnC,wBAAIJ,UAAWC,IAAOI,IAAtB,gBAEF,kBAAC,IAAD,CAAML,UAAWC,IAAOK,KAAMF,GAAG,aAAjC,YAGA,kBAAC,IAAD,CAAMJ,UAAWC,IAAOK,KAAMF,GAAG,cAAjC,aAGA,kBAAC,IAAD,CAAMJ,UAAWC,IAAOK,KAAMF,GAAG,cAAjC,aAGA,kBAAC,IAAD,CAAMJ,UAAWC,IAAOK,KAAMF,GAAG,UAAjC,SAGA,kBAAC,IAAD,CAAMJ,UAAWC,IAAOK,KAAMF,GAAG,YAAjC,WAGA,uBACEJ,UAAWC,IAAOK,KAClBC,KAAK,wCACLC,OAAO,SACPC,IAAI,uBAJN,c,4BCrBS,SAASC,IACtB,OACE,4BAAQV,UAAWC,IAAOC,MACxB,uBAAGF,UAAWC,IAAOK,KAAMC,KAAI,iBAAYI,MACxCA,KACE,IAHP,SAII,IACF,uBAAGX,UAAWC,IAAOK,KAAMC,KAAI,gBAAWK,MACvCA,KACE,IAPP,oCAQuBC,K,MCPZ,SAASC,EAAT,GAA4B,IAAbC,EAAY,EAAZA,SAC5B,OACE,yBAAKf,UAAWC,IAAOC,MACrB,kBAACH,EAAD,MACA,yBAAKC,UAAWC,IAAOe,SAAUD,GACjC,kBAACL,EAAD,O,WCPAO,EAAOC,gBAAK,WAChB,OAAO,gCAEHC,EAAWD,gBAAK,WACpB,OAAO,gCAEHE,EAAYF,gBAAK,WACrB,OAAO,gCAEHG,EAAYH,gBAAK,WACrB,OAAO,gCAEHI,EAAQJ,gBAAK,WACjB,OAAO,gCAEHK,EAAUL,gBAAK,WACnB,OAAO,gCAGM,SAASM,IACtB,OACE,kBAAC,IAAD,CAAeC,SAAUC,KACvB,kBAACZ,EAAD,KACE,kBAAC,WAAD,CAAUa,SAAU,+BAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWX,EAAMY,OAAK,EAACC,KAAK,MACnC,kBAAC,IAAD,CAAOF,UAAWT,EAAUU,OAAK,EAACC,KAAK,cACvC,kBAAC,IAAD,CAAOF,UAAWR,EAAWS,OAAK,EAACC,KAAK,eACxC,kBAAC,IAAD,CAAOF,UAAWP,EAAWQ,OAAK,EAACC,KAAK,eACxC,kBAAC,IAAD,CAAOF,UAAWN,EAAOO,OAAK,EAACC,KAAK,WACpC,kBAAC,IAAD,CAAOF,UAAWL,EAASM,OAAK,EAACC,KAAK,iBCvB9BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCZnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACd,EAAD,OAEFe,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,a,kBEpI5BrD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,GAAK,mBAAmB,KAAO,uB,+BCD7E,0KAAO,IAAM4B,EAAW,eACXf,EAAY,qBACZC,EAAY,eACZuC,EAAQ,IAAIC,KACZvC,EAAOsC,EAAME,gB","file":"static/js/main.0c3a148c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__2mdXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"content\":\"App_content__1GxqD\"};","import React from 'react';\nimport styles from './Header.module.scss';\nimport { Link } from 'react-router-dom';\n\nexport default function Header() {\n  return (\n    <nav className={styles.root}>\n      <Link className={styles.homeLink} to=\"/\">\n        <h1 className={styles.h1}>Leo Patrone</h1>\n      </Link>\n      <Link className={styles.link} to=\"/weddings\">\n        Weddings\n      </Link>\n      <Link className={styles.link} to=\"/lifestyle\">\n        Lifestyle\n      </Link>\n      <Link className={styles.link} to=\"/portraits\">\n        Portraits\n      </Link>\n      <Link className={styles.link} to=\"/about\">\n        About\n      </Link>\n      <Link className={styles.link} to=\"/contact\">\n        Contact\n      </Link>\n      <a\n        className={styles.link}\n        href=\"https://www.instagram.com/leopatrone/\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Instagram\n      </a>\n    </nav>\n  );\n}\n","import React from 'react';\nimport styles from './Footer.module.scss';\nimport { LEO_EMAIL, LEO_PHONE, YEAR } from 'utils/constants';\n\nexport default function Footer() {\n  return (\n    <footer className={styles.root}>\n      <a className={styles.link} href={`mailto:${LEO_EMAIL}`}>\n        {LEO_EMAIL}\n      </a>{' '}\n      •{' '}\n      <a className={styles.link} href={`tel:+1${LEO_PHONE}`}>\n        {LEO_PHONE}\n      </a>{' '}\n      • Made in U.S.A. • ©{YEAR}\n    </footer>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.scss';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport PropTypes from 'prop-types';\nimport 'styles/reset.scss';\n\nexport default function App({ children }) {\n  return (\n    <div className={styles.root}>\n      <Header />\n      <div className={styles.content}>{children}</div>\n      <Footer />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  children: PropTypes.node,\n};\n","import App from 'App/App';\nimport { BASE_URL } from 'utils/constants';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport React, { Suspense, lazy } from 'react';\n\nconst Home = lazy(() => {\n  return import('pages/Home/Home');\n});\nconst Weddings = lazy(() => {\n  return import('pages/Weddings/Weddings');\n});\nconst Lifestyle = lazy(() => {\n  return import('pages/Lifestyle/Lifestyle');\n});\nconst Portraits = lazy(() => {\n  return import('pages/Portraits/Portraits');\n});\nconst About = lazy(() => {\n  return import('pages/About/About');\n});\nconst Contact = lazy(() => {\n  return import('pages/Contact/Contact');\n});\n\nexport default function Router() {\n  return (\n    <BrowserRouter basename={BASE_URL}>\n      <App>\n        <Suspense fallback={<div />}>\n          <Switch>\n            <Route component={Home} exact path=\"/\" />\n            <Route component={Weddings} exact path=\"/weddings\" />\n            <Route component={Lifestyle} exact path=\"/lifestyle\" />\n            <Route component={Portraits} exact path=\"/portraits\" />\n            <Route component={About} exact path=\"/about\" />\n            <Route component={Contact} exact path=\"/contact\" />\n          </Switch>\n        </Suspense>\n      </App>\n    </BrowserRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2EhaM\",\"h1\":\"Header_h1__13r5W\",\"link\":\"Header_link__2D4T8\"};","export const BASE_URL = '/leopatrone/';\nexport const LEO_EMAIL = 'leo@leopatrone.com';\nexport const LEO_PHONE = '801-360-7786';\nexport const TODAY = new Date();\nexport const YEAR = TODAY.getFullYear();\n"],"sourceRoot":""}