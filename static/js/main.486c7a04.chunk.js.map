{"version":3,"sources":["utils/constants.js","App/Footer/Footer.module.scss","App/App.module.scss","App/Header/Header.module.scss","App/Header/Header.js","App/Footer/Footer.js","App/App.js","router.js","serviceWorker.js","index.js"],"names":["BASE_URL","LEO_EMAIL","LEO_PHONE","TODAY","Date","YEAR","getFullYear","ROUTE_HOME","ROUTE_WEDDINGS","ROUTE_LIFESTYLE","ROUTE_PORTRAITS","ROUTE_ABOUT","ROUTE_CONTACT","module","exports","withRouter","pathname","location","className","styles","root","classnames","homeLink","selected","to","h1","pageLinks","link","href","target","rel","Footer","App","children","content","Home","lazy","Weddings","Lifestyle","Portraits","About","Contact","Router","basename","fallback","component","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.486c7a04.chunk.js","sourcesContent":["export const BASE_URL = '/leopatrone/';\nexport const LEO_EMAIL = 'leo@leopatrone.com';\nexport const LEO_PHONE = '801-360-7786';\nexport const TODAY = new Date();\nexport const YEAR = TODAY.getFullYear();\nexport const ROUTE_HOME = '/';\nexport const ROUTE_WEDDINGS = '/weddings';\nexport const ROUTE_LIFESTYLE = '/lifestyle';\nexport const ROUTE_PORTRAITS = '/portraits';\nexport const ROUTE_ABOUT = '/about';\nexport const ROUTE_CONTACT = '/contact';\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__2mdXY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__nWMuC\",\"content\":\"App_content__1GxqD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__2EhaM\",\"homeLink\":\"Header_homeLink__2jZvP\",\"selected\":\"Header_selected__FQe7k\",\"pageLinks\":\"Header_pageLinks__2aiSR\",\"h1\":\"Header_h1__13r5W\",\"link\":\"Header_link__2D4T8\"};","import React from 'react';\nimport styles from './Header.module.scss';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  ROUTE_HOME,\n  ROUTE_WEDDINGS,\n  ROUTE_LIFESTYLE,\n  ROUTE_PORTRAITS,\n  ROUTE_ABOUT,\n  ROUTE_CONTACT,\n} from 'utils/constants';\nimport classnames from 'classnames';\n\nfunction Header({ location: { pathname } }) {\n  return (\n    <nav className={styles.root}>\n      <Link\n        className={classnames(styles.homeLink, pathname === ROUTE_HOME && styles.selected)}\n        to={ROUTE_HOME}\n      >\n        <h1 className={styles.h1}>Leo Patrone</h1>\n      </Link>\n      <div className={styles.pageLinks}>\n        <Link\n          className={classnames(styles.link, pathname === ROUTE_WEDDINGS && styles.selected)}\n          to={ROUTE_WEDDINGS}\n        >\n          Weddings\n        </Link>\n        <Link\n          className={classnames(styles.link, pathname === ROUTE_LIFESTYLE && styles.selected)}\n          to={ROUTE_LIFESTYLE}\n        >\n          Fart\n        </Link>\n        <Link\n          className={classnames(styles.link, pathname === ROUTE_PORTRAITS && styles.selected)}\n          to={ROUTE_PORTRAITS}\n        >\n          Portraits\n        </Link>\n        <Link\n          className={classnames(styles.link, pathname === ROUTE_ABOUT && styles.selected)}\n          to={ROUTE_ABOUT}\n        >\n          About\n        </Link>\n        <Link\n          className={classnames(styles.link, pathname === ROUTE_CONTACT && styles.selected)}\n          to={ROUTE_CONTACT}\n        >\n          Contact\n        </Link>\n        <a\n          className={styles.link}\n          href=\"https://www.instagram.com/leopatrone/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Instagram\n        </a>\n      </div>\n    </nav>\n  );\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport styles from './Footer.module.scss';\nimport { LEO_EMAIL, LEO_PHONE, YEAR } from 'utils/constants';\n\nexport default function Footer() {\n  return (\n    <footer className={styles.root}>\n      <a className={styles.link} href={`mailto:${LEO_EMAIL}`}>\n        {LEO_EMAIL}\n      </a>{' '}\n      •{' '}\n      <a className={styles.link} href={`tel:+1${LEO_PHONE}`}>\n        {LEO_PHONE}\n      </a>{' '}\n      • Made in U.S.A. • ©{YEAR}\n    </footer>\n  );\n}\n","import React from 'react';\nimport styles from './App.module.scss';\nimport Header from './Header/Header';\nimport Footer from './Footer/Footer';\nimport PropTypes from 'prop-types';\nimport 'styles/reset.scss';\n\nexport default function App({ children }) {\n  return (\n    <div className={styles.root}>\n      <Header />\n      <div className={styles.content}>{children}</div>\n      <Footer />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  children: PropTypes.node,\n};\n","import App from 'App/App';\nimport {\n  BASE_URL,\n  ROUTE_HOME,\n  ROUTE_WEDDINGS,\n  ROUTE_LIFESTYLE,\n  ROUTE_PORTRAITS,\n  ROUTE_ABOUT,\n  ROUTE_CONTACT,\n} from 'utils/constants';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport React, { Suspense, lazy } from 'react';\n\nconst Home = lazy(() => {\n  return import('pages/Home/Home');\n});\nconst Weddings = lazy(() => {\n  return import('pages/Weddings/Weddings');\n});\nconst Lifestyle = lazy(() => {\n  return import('pages/Lifestyle/Lifestyle');\n});\nconst Portraits = lazy(() => {\n  return import('pages/Portraits/Portraits');\n});\nconst About = lazy(() => {\n  return import('pages/About/About');\n});\nconst Contact = lazy(() => {\n  return import('pages/Contact/Contact');\n});\n\nexport default function Router() {\n  return (\n    <BrowserRouter basename={BASE_URL}>\n      <App>\n        <Suspense fallback={<div />}>\n          <Switch>\n            <Route component={Home} exact path={ROUTE_HOME} />\n            <Route component={Weddings} exact path={ROUTE_WEDDINGS} />\n            <Route component={Lifestyle} exact path={ROUTE_LIFESTYLE} />\n            <Route component={Portraits} exact path={ROUTE_PORTRAITS} />\n            <Route component={About} exact path={ROUTE_ABOUT} />\n            <Route component={Contact} exact path={ROUTE_CONTACT} />\n          </Switch>\n        </Suspense>\n      </App>\n    </BrowserRouter>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}